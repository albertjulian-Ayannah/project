{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar $filter = require('../internals/array-iteration').filter;\n\nvar fails = require('../internals/fails');\n\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter'); // Edge 14- issue\n\nvar USES_TO_LENGTH = HAS_SPECIES_SUPPORT && !fails(function () {\n  [].filter.call({\n    length: -1,\n    0: 1\n  }, function (it) {\n    throw it;\n  });\n}); // `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n\n$({\n  target: 'Array',\n  proto: true,\n  forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH\n}, {\n  filter: function filter(callbackfn\n  /* , thisArg */\n  ) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});","map":{"version":3,"sources":["C:/Users/pc/Desktop/project/node_modules/core-js/modules/es.array.filter.js"],"names":["$","require","$filter","filter","fails","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","call","length","it","target","proto","forced","callbackfn","arguments","undefined"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,8BAAD,CAAP,CAAwCE,MAAtD;;AACA,IAAIC,KAAK,GAAGH,OAAO,CAAC,oBAAD,CAAnB;;AACA,IAAII,4BAA4B,GAAGJ,OAAO,CAAC,+CAAD,CAA1C;;AAEA,IAAIK,mBAAmB,GAAGD,4BAA4B,CAAC,QAAD,CAAtD,C,CACA;;AACA,IAAIE,cAAc,GAAGD,mBAAmB,IAAI,CAACF,KAAK,CAAC,YAAY;AAC7D,KAAGD,MAAH,CAAUK,IAAV,CAAe;AAAEC,IAAAA,MAAM,EAAE,CAAC,CAAX;AAAc,OAAG;AAAjB,GAAf,EAAqC,UAAUC,EAAV,EAAc;AAAE,UAAMA,EAAN;AAAW,GAAhE;AACD,CAFiD,CAAlD,C,CAIA;AACA;AACA;;AACAV,CAAC,CAAC;AAAEW,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE,IAA1B;AAAgCC,EAAAA,MAAM,EAAE,CAACP,mBAAD,IAAwB,CAACC;AAAjE,CAAD,EAAoF;AACnFJ,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBW;AAAW;AAA3B,IAA4C;AAClD,WAAOZ,OAAO,CAAC,IAAD,EAAOY,UAAP,EAAmBC,SAAS,CAACN,MAAV,GAAmB,CAAnB,GAAuBM,SAAS,CAAC,CAAD,CAAhC,GAAsCC,SAAzD,CAAd;AACD;AAHkF,CAApF,CAAD","sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar $filter = require('../internals/array-iteration').filter;\r\nvar fails = require('../internals/fails');\r\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\r\n\r\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\r\n// Edge 14- issue\r\nvar USES_TO_LENGTH = HAS_SPECIES_SUPPORT && !fails(function () {\r\n  [].filter.call({ length: -1, 0: 1 }, function (it) { throw it; });\r\n});\r\n\r\n// `Array.prototype.filter` method\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\r\n// with adding support of @@species\r\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\r\n  filter: function filter(callbackfn /* , thisArg */) {\r\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}