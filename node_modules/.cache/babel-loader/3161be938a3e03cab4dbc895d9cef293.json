{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { getDataFurnitureSaga } from './saga';\nimport { Grid, Button, IconButton, Tooltip, TextField } from '@material-ui/core';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._isMounted = false;\n    _this.state = {\n      loading: true,\n      errorMessage: '',\n      dataFurnitureStyles: [],\n      dataProduct: [],\n      dataChoosenStyles: [],\n      dataListProduct: []\n    };\n\n    _this.getDataFurniture = function _callee() {\n      var param, data, dataFurniture, dataFurnitureStyles, dataProduct;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              param = {};\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getDataFurnitureSaga(param));\n\n            case 3:\n              data = _context.sent;\n\n              if (data) {\n                if (!data.error) {\n                  dataFurniture = data.furniture;\n                  dataFurnitureStyles = dataFurniture && dataFurniture.furniture_styles;\n                  dataProduct = dataFurniture && dataFurniture.products;\n                  this.setState({\n                    dataFurnitureStyles: dataFurnitureStyles,\n                    dataProduct: dataProduct\n                  });\n                } else {\n                  this.setState({\n                    errorMessage: data.error,\n                    loading: false\n                  });\n                }\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    };\n\n    _this.refreshDataFurniture = function () {\n      var dataListProduct = [];\n      var dataProduct = _this.state.dataProduct;\n      var deliveryTime = _this.state.deliveryTime;\n      var searchFurniture = _this.state.searchFurniture;\n      var furnitureStyle = _this.state.furnitureStyle;\n\n      for (var key in dataProduct) {\n        if (dataProduct[key].name.toString().toLowerCase().includes(searchFurniture.toString().toLowerCase())) {\n          dataListProduct.push(dataProduct[key]);\n        }\n      }\n\n      _this.setState({\n        dataListProduct: dataListProduct\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.getDataFurniture();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        style: {\n          backgroundColor: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        style: {\n          color: 'white'\n        },\n        placeholder: 'Search Furniture',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Hello World\")), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Hello World\")))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/pc/Desktop/project/src/App.js"],"names":["React","getDataFurnitureSaga","Grid","Button","IconButton","Tooltip","TextField","App","_isMounted","state","loading","errorMessage","dataFurnitureStyles","dataProduct","dataChoosenStyles","dataListProduct","getDataFurniture","param","data","error","dataFurniture","furniture","furniture_styles","products","setState","refreshDataFurniture","deliveryTime","searchFurniture","furnitureStyle","key","name","toString","toLowerCase","includes","push","backgroundColor","color","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport { getDataFurnitureSaga } from './saga';\r\nimport { Grid, Button, IconButton, Tooltip, TextField } from '@material-ui/core';\r\n\r\nclass App extends React.Component {\r\n  _isMounted = false;\r\n  state = {\r\n    loading : true,\r\n    errorMessage: '',\r\n    dataFurnitureStyles: [],\r\n    dataProduct: [],\r\n    dataChoosenStyles: [],\r\n    dataListProduct: [],\r\n  }\r\n\r\n  componentDidMount(){\r\n    this._isMounted = true;\r\n    this.getDataFurniture();\r\n  }\r\n\r\n  \r\n\r\n  getDataFurniture = async function() {\r\n    const param = {}\r\n\r\n    const data = await getDataFurnitureSaga(param)\r\n    \r\n    if(data){\r\n      \r\n      if(!data.error){\r\n        const dataFurniture = data.furniture;\r\n\r\n        const dataFurnitureStyles = dataFurniture && dataFurniture.furniture_styles;\r\n        const dataProduct = dataFurniture && dataFurniture.products;\r\n\r\n        this.setState({dataFurnitureStyles, dataProduct})\r\n      }else{\r\n        this.setState({errorMessage:data.error, loading:false})\r\n      }\r\n    }\r\n  }\r\n\r\n  refreshDataFurniture = () => {\r\n    const dataListProduct = [];\r\n    const dataProduct = this.state.dataProduct;\r\n    const deliveryTime = this.state.deliveryTime;\r\n    const searchFurniture = this.state.searchFurniture;\r\n    const furnitureStyle = this.state.furnitureStyle;\r\n\r\n    for(const key in dataProduct) {\r\n      if(\r\n        dataProduct[key].name.toString().toLowerCase().includes(searchFurniture.toString().toLowerCase())\r\n      ) {\r\n        dataListProduct.push(dataProduct[key])\r\n      }\r\n    }\r\n\r\n    this.setState({dataListProduct})\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n      <Grid container>\r\n        <Grid item xs={12} sm={12} style={{backgroundColor:'blue'}}>\r\n          <Grid container>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField \r\n                style={{color:'white'}}\r\n                placeholder={'Search Furniture'}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6} sm={6}>\r\n              <p>Hello World</p>\r\n            </Grid>\r\n\r\n            <Grid item xs={6} sm={6}>\r\n              <p>Hello World</p>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n \r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}