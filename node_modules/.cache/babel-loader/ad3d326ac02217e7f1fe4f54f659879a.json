{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\src\\\\subComponent\\\\DropDown.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { Checkbox, Grid } from '@material-ui/core';\nvar ITEM_HEIGHT = 40;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nvar styles = function styles(theme) {\n  return {\n    selectField: {\n      backgroundColor: 'white',\n      minWidth: 120,\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: '1em',\n      padding: 'none'\n    },\n    formControl: {\n      backgroundColor: 'white',\n      minWidth: 120,\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: '1em'\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginRight: '10px'\n    },\n    multipleDropDown: {\n      '&:hover': {\n        border: '1px solid rgba(0, 0, 0, 1)'\n      },\n      border: '1px solid rgba(0, 0, 0, .3)',\n      borderRadius: '5px',\n      padding: '8px 0px 8px 10px'\n    }\n  };\n};\n\nvar DropDownComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DropDownComponent, _React$Component);\n\n  function DropDownComponent(props) {\n    var _this;\n\n    _classCallCheck(this, DropDownComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropDownComponent).call(this, props));\n\n    _this.getColor = function (id, dataValue) {\n      var flag = false;\n\n      for (var key in dataValue) {\n        if (dataValue[key][_this.props.id].toString().toLowerCase() === id.toString().toLowerCase()) {\n          flag = true;\n          break;\n        }\n      }\n\n      return flag ? '#d3d3d3' : 'white';\n    };\n\n    _this.getChecked = function (id, dataValue) {\n      var flag = false;\n\n      for (var key in dataValue) {\n        if (dataValue[key][_this.props.id].toString().toLowerCase() === id.toString().toLowerCase()) {\n          flag = true;\n          break;\n        }\n      }\n\n      return flag;\n    };\n\n    _this.state = {\n      errorText: ''\n    };\n    return _this;\n  }\n\n  _createClass(DropDownComponent, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.error !== this.props.error) {\n        this.setState({\n          error: nextProps.error\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          fullWidth = _this$props.fullWidth,\n          label = _this$props.label,\n          data = _this$props.data,\n          id = _this$props.id,\n          labelName = _this$props.labelName,\n          value = _this$props.value,\n          onChange = _this$props.onChange,\n          disabled = _this$props.disabled,\n          multiple = _this$props.multiple;\n\n      if (multiple) {\n        return React.createElement(FormControl, {\n          variant: \"outlined\",\n          className: classes.formControl,\n          error: !!this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(Select, {\n          variant: \"outlined\",\n          multiple: true,\n          fullWidth: true,\n          value: value,\n          onChange: onChange,\n          placeholder: this.props.placeholder,\n          input: React.createElement(Input, {\n            className: classes.multipleDropDown,\n            disableUnderline: true,\n            multiline: true,\n            id: \"select-multiple-chip\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }),\n          renderValue: function renderValue(value) {\n            return React.createElement(\"div\", {\n              className: classes.chips,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133\n              },\n              __self: this\n            }, value.map(function (dataChip) {\n              return React.createElement(Chip, {\n                key: dataChip[id],\n                label: dataChip[labelName],\n                className: classes.chip,\n                style: {\n                  marginRight: '10px',\n                  marginBottom: '5px'\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135\n                },\n                __self: this\n              });\n            }));\n          },\n          MenuProps: MenuProps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, data.map(function (data) {\n          return React.createElement(MenuItem, {\n            key: data[id],\n            value: data[id],\n            style: {\n              backgroundColor: _this2.getColor(data[id], value)\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            container: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            item: true,\n            xs: 6,\n            sm: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, data[labelName]), React.createElement(Grid, {\n            item: true,\n            xs: 6,\n            sm: 6,\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, React.createElement(Checkbox, {\n            style: {\n              backgroundColor: 'green'\n            },\n            checked: _this2.getChecked(data[id], value),\n            value: \"default\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }))));\n        })), this.state.error && React.createElement(FormHelperText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, this.state.error));\n      } else {\n        return React.createElement(FormControl, {\n          variant: \"outlined\",\n          className: classes.selectField,\n          error: !!this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Select, {\n          native: true,\n          value: value,\n          onChange: onChange,\n          fullWidth: fullWidth // labelWidth={labelWidth}\n          ,\n          inputProps: {\n            name: label,\n            id: 'outlined-age-native-simple',\n            style: {\n              padding: '10px'\n            }\n          },\n          disabled: disabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, data && Object.keys(data).length && data.map(function (object) {\n          var idObject = object[id];\n          var labelNames = labelName.split('-');\n          var labelObject = '';\n\n          if (labelNames.length > 1) {\n            for (var i = 0; i < labelNames.length; i++) {\n              labelObject = \"\".concat(labelObject, \" - \").concat(object[labelNames[i]]);\n            }\n\n            labelObject = labelObject.substr(3);\n          } else {\n            labelObject = object[labelNames];\n          }\n\n          return React.createElement(\"option\", {\n            value: idObject,\n            key: idObject,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, labelObject);\n        })), this.state.error && React.createElement(FormHelperText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, this.state.error));\n      }\n    }\n  }]);\n\n  return DropDownComponent;\n}(React.Component);\n\nDropDownComponent.propTypes = {\n  fullWidth: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  labelName: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n  error: PropTypes.string\n};\nexport default withStyles(styles)(DropDownComponent);","map":{"version":3,"sources":["C:/Users/pc/Desktop/project/src/subComponent/DropDown.js"],"names":["React","PropTypes","withStyles","Select","Chip","Input","MenuItem","FormControl","FormHelperText","Checkbox","Grid","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","styles","theme","selectField","backgroundColor","minWidth","display","flexWrap","marginTop","padding","formControl","chips","marginRight","multipleDropDown","border","borderRadius","DropDownComponent","props","getColor","id","dataValue","flag","key","toString","toLowerCase","getChecked","state","errorText","nextProps","error","setState","classes","fullWidth","label","data","labelName","value","onChange","disabled","multiple","placeholder","map","dataChip","chip","marginBottom","justifyContent","name","Object","keys","length","object","idObject","labelNames","split","labelObject","i","substr","Component","propTypes","bool","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { Checkbox, Grid } from '@material-ui/core';\r\n\r\nconst ITEM_HEIGHT = 40;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  selectField: {\r\n    backgroundColor:'white',\r\n    minWidth: 120,\r\n    display: 'flex',\r\n    flexWrap: 'wrap', \r\n    marginTop: '1em',\r\n    padding:'none',\r\n  },\r\n\r\n  formControl: {\r\n    backgroundColor:'white',\r\n    minWidth: 120,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginTop: '1em',\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginRight: '10px',\r\n  },\r\n\r\n  multipleDropDown: {\r\n    '&:hover': {\r\n      border:'1px solid rgba(0, 0, 0, 1)',\r\n    },\r\n    border:'1px solid rgba(0, 0, 0, .3)', \r\n    borderRadius:'5px', \r\n    padding:'8px 0px 8px 10px', \r\n  }\r\n});\r\n\r\nclass DropDownComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorText: '',\r\n    };\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.error !== this.props.error) {\r\n      this.setState({\r\n        error: nextProps.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  getColor = (id, dataValue) => {\r\n    let flag = false;\r\n\r\n    for(const key in dataValue) {\r\n      if(dataValue[key][this.props.id].toString().toLowerCase() === id.toString().toLowerCase() ) {\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n    \r\n    return flag ? '#d3d3d3' : 'white';\r\n  }\r\n\r\n  getChecked = (id, dataValue) => {\r\n    let flag = false;\r\n\r\n    for(const key in dataValue) {\r\n      if(dataValue[key][this.props.id].toString().toLowerCase() === id.toString().toLowerCase() ) {\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n    \r\n    return flag;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      fullWidth,\r\n      label,\r\n      data,\r\n      id,\r\n      labelName,\r\n      value,\r\n      onChange,\r\n      disabled,\r\n      multiple,\r\n    } = this.props;\r\n    \r\n    if(multiple) {\r\n      return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl} error={!!this.state.error}>\r\n          <Select\r\n            variant='outlined'\r\n            multiple\r\n            fullWidth\r\n            value={value}\r\n            onChange={onChange}\r\n            placeholder={this.props.placeholder}\r\n            input={\r\n              <Input \r\n                className={classes.multipleDropDown}\r\n                disableUnderline \r\n                multiline\r\n                id=\"select-multiple-chip\" \r\n              />\r\n            }\r\n            renderValue={value => (\r\n              <div className={classes.chips}>\r\n                {value.map(dataChip => (\r\n                  <Chip \r\n                    key={dataChip[id]} \r\n                    label={dataChip[labelName]} \r\n                    className={classes.chip} \r\n                    style={{marginRight: '10px', marginBottom: '5px'}}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {data.map(data => (\r\n              <MenuItem key={data[id]} value={data[id]} style={{backgroundColor: this.getColor(data[id], value)}}>\r\n                <Grid container>\r\n                  <Grid item xs={6} sm={6}>\r\n                    {data[labelName]}\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={6} sm={6} style={{display:'flex',justifyContent: 'flex-end' }}>\r\n                    <Checkbox       \r\n                      style={{backgroundColor:'green'}}\r\n                      checked={this.getChecked(data[id], value)}\r\n                      value=\"default\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          {this.state.error && (\r\n            <FormHelperText>{this.state.error}</FormHelperText>\r\n          )}\r\n        </FormControl>\r\n      ); \r\n    } else {\r\n      return (\r\n        <FormControl variant=\"outlined\" className={classes.selectField} error={!!this.state.error}>\r\n          <Select\r\n            native\r\n            value={value}\r\n            onChange={onChange}\r\n            fullWidth={fullWidth}\r\n            // labelWidth={labelWidth}\r\n            inputProps={{\r\n              name: label,\r\n              id: 'outlined-age-native-simple',\r\n              style:{padding:'10px'}\r\n            }}\r\n            disabled={disabled}\r\n          >\r\n            {data &&\r\n              Object.keys(data).length &&\r\n              data.map((object) => {\r\n                const idObject = object[id];\r\n                const labelNames = labelName.split('-');\r\n                let labelObject = '';\r\n                if (labelNames.length > 1) {\r\n                  for (let i = 0; i < labelNames.length; i++) {\r\n                    labelObject = `${labelObject } - ${ object[labelNames[i]]}`;\r\n                  }\r\n                  labelObject = labelObject.substr(3);\r\n                } else {\r\n                  labelObject = object[labelNames];\r\n                }\r\n  \r\n                return (\r\n                  <option value={idObject} key={idObject}>\r\n                    {labelObject}\r\n                  </option>\r\n                );\r\n              })} \r\n          </Select>\r\n          {this.state.error && (\r\n            <FormHelperText>{this.state.error}</FormHelperText>\r\n          )}\r\n        </FormControl>\r\n      );\r\n    }\r\n    \r\n    \r\n  }\r\n}\r\n\r\nDropDownComponent.propTypes = {\r\n  fullWidth: PropTypes.bool,\r\n  label: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  labelName: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(DropDownComponent);\r\n"]},"metadata":{},"sourceType":"module"}