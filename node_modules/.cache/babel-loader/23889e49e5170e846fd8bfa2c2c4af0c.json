{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\pc\\\\Desktop\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{withStyles}from'@material-ui/styles';import Select from'@material-ui/core/Select';import Chip from'@material-ui/core/Chip';import Input from'@material-ui/core/Input';import MenuItem from'@material-ui/core/MenuItem';import FormControl from'@material-ui/core/FormControl';import FormHelperText from'@material-ui/core/FormHelperText';import{Checkbox,Grid,InputLabel}from'@material-ui/core';import CheckBoxIcon from'@material-ui/icons/CheckBox';var ITEM_HEIGHT=40;var ITEM_PADDING_TOP=8;var MenuProps={PaperProps:{style:{maxHeight:ITEM_HEIGHT*4.5+ITEM_PADDING_TOP,width:250}}};var styles=function styles(theme){return{selectField:{backgroundColor:'white',minWidth:120,display:'flex',flexWrap:'wrap',marginTop:'1em',padding:'none'},formControl:{'&:hover':{border:'1px solid rgba(0, 0, 0, 1)'},border:'1px solid rgba(0, 0, 0, .3)',borderRadius:'5px',margin:theme.spacing*1,backgroundColor:'white'},// formControl: {\n//   // backgroundColor:'white',\n//   minWidth: 120,\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   // marginTop: '1em',\n// },\nchips:{display:'flex',flexWrap:'wrap',marginRight:'10px'},multipleDropDown:{// '&:hover': {\n//   border:'1px solid rgba(0, 0, 0, 1)',\n// },\nminHeight:'40px',// border:'1px solid rgba(0, 0, 0, .3)', \n// borderRadius:'5px', \npadding:'2px 0px 0px 2px'}};};var DropDownComponent=/*#__PURE__*/function(_React$Component){_inherits(DropDownComponent,_React$Component);function DropDownComponent(props){var _this;_classCallCheck(this,DropDownComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(DropDownComponent).call(this,props));_this.getColor=function(id,dataValue){var flag=false;for(var key in dataValue){if(dataValue[key][_this.props.id].toString().toLowerCase()===id.toString().toLowerCase()){flag=true;break;}}return flag?'#d3d3d3':'white';};_this.getChecked=function(id,dataValue){var flag=false;for(var key in dataValue){if(dataValue[key][_this.props.id].toString().toLowerCase()===id.toString().toLowerCase()){flag=true;break;}}return flag;};_this.state={errorText:''};return _this;}_createClass(DropDownComponent,[{key:\"UNSAFE_componentWillReceiveProps\",value:function UNSAFE_componentWillReceiveProps(nextProps){if(nextProps.error!==this.props.error){this.setState({error:nextProps.error});}}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,classes=_this$props.classes,fullWidth=_this$props.fullWidth,label=_this$props.label,data=_this$props.data,id=_this$props.id,labelName=_this$props.labelName,value=_this$props.value,onChange=_this$props.onChange,disabled=_this$props.disabled,multiple=_this$props.multiple;if(multiple){return React.createElement(FormControl,{className:classes.formControl,error:!!this.state.error,fullWidth:fullWidth},React.createElement(InputLabel,{id:\"demo-mutiple-checkbox-label\",style:{marginLeft:'10px',marginTop:'5px'}},this.props.placeholder),React.createElement(Select,{multiple:true,fullWidth:fullWidth,value:value,onChange:onChange// style={{backgroundColor:'white'}}\n,input:React.createElement(Input,{className:classes.multipleDropDown,placeholder:'Furniture Styles',disableUnderline:true,multiline:true,id:\"select-multiple-chip\"}),renderValue:function renderValue(value){return React.createElement(\"div\",{className:classes.chips},value.map(function(dataChip){return React.createElement(Chip,{key:dataChip[id],label:dataChip[labelName],className:classes.chip,style:{marginRight:'10px',marginBottom:'5px'}});}));},MenuProps:MenuProps},data.map(function(data){return React.createElement(MenuItem,{key:data[id],value:data[id],style:{backgroundColor:_this2.getColor(data[id],value)}},React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:6,sm:6,style:{paddingTop:'8px'}},data[labelName]),React.createElement(Grid,{item:true,xs:6,sm:6,style:{display:'flex',justifyContent:'flex-end'}},React.createElement(Checkbox,{style:{visibility:'none'},checkedIcon:React.createElement(CheckBoxIcon,{style:{color:'green'}}),checked:_this2.getChecked(data[id],value)}))));})));}else{return React.createElement(FormControl,{variant:\"outlined\",className:classes.selectField,error:!!this.state.error},React.createElement(Select,{native:true,value:value,onChange:onChange,fullWidth:fullWidth// labelWidth={labelWidth}\n,inputProps:{name:label,id:'outlined-age-native-simple',style:{padding:'10px'}},disabled:disabled},data&&Object.keys(data).length&&data.map(function(object){var idObject=object[id];var labelNames=labelName.split('-');var labelObject='';if(labelNames.length>1){for(var i=0;i<labelNames.length;i++){labelObject=\"\".concat(labelObject,\" - \").concat(object[labelNames[i]]);}labelObject=labelObject.substr(3);}else{labelObject=object[labelNames];}return React.createElement(\"option\",{value:idObject,key:idObject},labelObject);})),this.state.error&&React.createElement(FormHelperText,null,this.state.error));}}}]);return DropDownComponent;}(React.Component);export default withStyles(styles)(DropDownComponent);","map":{"version":3,"sources":["C:/Users/pc/Desktop/project/src/subComponent/DropDown.js"],"names":["React","withStyles","Select","Chip","Input","MenuItem","FormControl","FormHelperText","Checkbox","Grid","InputLabel","CheckBoxIcon","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","styles","theme","selectField","backgroundColor","minWidth","display","flexWrap","marginTop","padding","formControl","border","borderRadius","margin","spacing","chips","marginRight","multipleDropDown","minHeight","DropDownComponent","props","getColor","id","dataValue","flag","key","toString","toLowerCase","getChecked","state","errorText","nextProps","error","setState","classes","fullWidth","label","data","labelName","value","onChange","disabled","multiple","marginLeft","placeholder","map","dataChip","chip","marginBottom","paddingTop","justifyContent","visibility","color","name","Object","keys","length","object","idObject","labelNames","split","labelObject","i","substr","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { Checkbox, Grid, InputLabel } from '@material-ui/core';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst ITEM_HEIGHT = 40;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  selectField: {\r\n    backgroundColor:'white',\r\n    minWidth: 120,\r\n    display: 'flex',\r\n    flexWrap: 'wrap', \r\n    marginTop: '1em',\r\n    padding:'none',\r\n  },\r\n\r\n  formControl: {\r\n    '&:hover': {\r\n      border:'1px solid rgba(0, 0, 0, 1)',\r\n    },\r\n    border:'1px solid rgba(0, 0, 0, .3)', \r\n    borderRadius:'5px', \r\n    margin: theme.spacing * 1,\r\n    backgroundColor:'white'\r\n  },\r\n  // formControl: {\r\n  //   // backgroundColor:'white',\r\n  //   minWidth: 120,\r\n  //   display: 'flex',\r\n  //   flexWrap: 'wrap',\r\n  //   // marginTop: '1em',\r\n  // },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginRight: '10px',\r\n  },\r\n\r\n  multipleDropDown: {\r\n    // '&:hover': {\r\n    //   border:'1px solid rgba(0, 0, 0, 1)',\r\n    // },\r\n    minHeight:'40px',\r\n    // border:'1px solid rgba(0, 0, 0, .3)', \r\n    // borderRadius:'5px', \r\n    padding:'2px 0px 0px 2px', \r\n  }\r\n});\r\n\r\nclass DropDownComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorText: '',\r\n    };\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.error !== this.props.error) {\r\n      this.setState({\r\n        error: nextProps.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  getColor = (id, dataValue) => {\r\n    let flag = false;\r\n\r\n    for(const key in dataValue) {\r\n      if(dataValue[key][this.props.id].toString().toLowerCase() === id.toString().toLowerCase() ) {\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n    \r\n    return flag ? '#d3d3d3' : 'white';\r\n  }\r\n\r\n  getChecked = (id, dataValue) => {\r\n    let flag = false;\r\n\r\n    for(const key in dataValue) {\r\n      if(dataValue[key][this.props.id].toString().toLowerCase() === id.toString().toLowerCase() ) {\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n    \r\n    return flag;\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      fullWidth,\r\n      label,\r\n      data,\r\n      id,\r\n      labelName,\r\n      value,\r\n      onChange,\r\n      disabled,\r\n      multiple,\r\n    } = this.props;\r\n    \r\n    if(multiple) {\r\n      return (\r\n        <FormControl className={classes.formControl} error={!!this.state.error} fullWidth={fullWidth}>\r\n          <InputLabel id=\"demo-mutiple-checkbox-label\" style={{marginLeft:'10px', marginTop:'5px'}}>{this.props.placeholder}</InputLabel>\r\n          <Select\r\n            multiple\r\n            fullWidth={fullWidth}\r\n            value={value}\r\n            onChange={onChange}\r\n            // style={{backgroundColor:'white'}}\r\n            input={\r\n              <Input \r\n                className={classes.multipleDropDown}\r\n                placeholder={'Furniture Styles'}\r\n                disableUnderline \r\n                multiline\r\n                id=\"select-multiple-chip\" \r\n              />\r\n            }\r\n            renderValue={value => (\r\n              <div className={classes.chips}>\r\n                {value.map(dataChip => (\r\n                  <Chip \r\n                    key={dataChip[id]} \r\n                    label={dataChip[labelName]} \r\n                    className={classes.chip} \r\n                    style={{marginRight: '10px', marginBottom: '5px'}}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {data.map(data => (\r\n              <MenuItem key={data[id]} value={data[id]} style={{backgroundColor: this.getColor(data[id], value)}}>\r\n                <Grid container>\r\n                  <Grid item xs={6} sm={6} style={{paddingTop:'8px'}}>\r\n                    {data[labelName]}\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={6} sm={6} style={{display:'flex',justifyContent: 'flex-end' }}>\r\n                    <Checkbox       \r\n                      style={{visibility:'none'}}\r\n                      checkedIcon={<CheckBoxIcon style={{color:'green'}} />}\r\n                      checked={this.getChecked(data[id], value)}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      ); \r\n    } else {\r\n      return (\r\n        <FormControl variant=\"outlined\" className={classes.selectField} error={!!this.state.error}>\r\n          <Select\r\n            native\r\n            value={value}\r\n            onChange={onChange}\r\n            fullWidth={fullWidth}\r\n            // labelWidth={labelWidth}\r\n            inputProps={{\r\n              name: label,\r\n              id: 'outlined-age-native-simple',\r\n              style:{padding:'10px'}\r\n            }}\r\n            disabled={disabled}\r\n          >\r\n            {data &&\r\n              Object.keys(data).length &&\r\n              data.map((object) => {\r\n                const idObject = object[id];\r\n                const labelNames = labelName.split('-');\r\n                let labelObject = '';\r\n                if (labelNames.length > 1) {\r\n                  for (let i = 0; i < labelNames.length; i++) {\r\n                    labelObject = `${labelObject } - ${ object[labelNames[i]]}`;\r\n                  }\r\n                  labelObject = labelObject.substr(3);\r\n                } else {\r\n                  labelObject = object[labelNames];\r\n                }\r\n  \r\n                return (\r\n                  <option value={idObject} key={idObject}>\r\n                    {labelObject}\r\n                  </option>\r\n                );\r\n              })} \r\n          </Select>\r\n          {this.state.error && (\r\n            <FormHelperText>{this.state.error}</FormHelperText>\r\n          )}\r\n        </FormControl>\r\n      );\r\n    }\r\n    \r\n    \r\n  }\r\n}\r\n\r\nDropDownComponent.propTypes = {\r\n  fullWidth: PropTypes.bool,\r\n  label: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  labelName: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(DropDownComponent);\r\n"]},"metadata":{},"sourceType":"module"}