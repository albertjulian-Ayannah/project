{"ast":null,"code":"'use strict';\n\nvar toIndexedObject = require('../internals/to-indexed-object');\n\nvar toInteger = require('../internals/to-integer');\n\nvar toLength = require('../internals/to-length');\n\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\n\nvar min = Math.min;\nvar nativeLastIndexOf = [].lastIndexOf;\nvar NEGATIVE_ZERO = !!nativeLastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;\nvar SLOPPY_METHOD = sloppyArrayMethod('lastIndexOf'); // `Array.prototype.lastIndexOf` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof\n\nmodule.exports = NEGATIVE_ZERO || SLOPPY_METHOD ? function lastIndexOf(searchElement\n/* , fromIndex = @[*-1] */\n) {\n  // convert -0 to +0\n  if (NEGATIVE_ZERO) return nativeLastIndexOf.apply(this, arguments) || 0;\n  var O = toIndexedObject(this);\n  var length = toLength(O.length);\n  var index = length - 1;\n  if (arguments.length > 1) index = min(index, toInteger(arguments[1]));\n  if (index < 0) index = length + index;\n\n  for (; index >= 0; index--) {\n    if (index in O && O[index] === searchElement) return index || 0;\n  }\n\n  return -1;\n} : nativeLastIndexOf;","map":{"version":3,"sources":["C:/Users/pc/Desktop/fabelio/node_modules/core-js/internals/array-last-index-of.js"],"names":["toIndexedObject","require","toInteger","toLength","sloppyArrayMethod","min","Math","nativeLastIndexOf","lastIndexOf","NEGATIVE_ZERO","SLOPPY_METHOD","module","exports","searchElement","apply","arguments","O","length","index"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAGC,OAAO,CAAC,gCAAD,CAA7B;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,kCAAD,CAA/B;;AAEA,IAAII,GAAG,GAAGC,IAAI,CAACD,GAAf;AACA,IAAIE,iBAAiB,GAAG,GAAGC,WAA3B;AACA,IAAIC,aAAa,GAAG,CAAC,CAACF,iBAAF,IAAuB,IAAI,CAAC,CAAD,EAAIC,WAAJ,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAJ,GAA6B,CAAxE;AACA,IAAIE,aAAa,GAAGN,iBAAiB,CAAC,aAAD,CAArC,C,CAEA;AACA;;AACAO,MAAM,CAACC,OAAP,GAAkBH,aAAa,IAAIC,aAAlB,GAAmC,SAASF,WAAT,CAAqBK;AAAc;AAAnC,EAA+D;AACjH;AACA,MAAIJ,aAAJ,EAAmB,OAAOF,iBAAiB,CAACO,KAAlB,CAAwB,IAAxB,EAA8BC,SAA9B,KAA4C,CAAnD;AACnB,MAAIC,CAAC,GAAGhB,eAAe,CAAC,IAAD,CAAvB;AACA,MAAIiB,MAAM,GAAGd,QAAQ,CAACa,CAAC,CAACC,MAAH,CAArB;AACA,MAAIC,KAAK,GAAGD,MAAM,GAAG,CAArB;AACA,MAAIF,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAA0BC,KAAK,GAAGb,GAAG,CAACa,KAAD,EAAQhB,SAAS,CAACa,SAAS,CAAC,CAAD,CAAV,CAAjB,CAAX;AAC1B,MAAIG,KAAK,GAAG,CAAZ,EAAeA,KAAK,GAAGD,MAAM,GAAGC,KAAjB;;AACf,SAAMA,KAAK,IAAI,CAAf,EAAkBA,KAAK,EAAvB;AAA2B,QAAIA,KAAK,IAAIF,CAAT,IAAcA,CAAC,CAACE,KAAD,CAAD,KAAaL,aAA/B,EAA8C,OAAOK,KAAK,IAAI,CAAhB;AAAzE;;AACA,SAAO,CAAC,CAAR;AACD,CAVgB,GAUbX,iBAVJ","sourcesContent":["'use strict';\r\nvar toIndexedObject = require('../internals/to-indexed-object');\r\nvar toInteger = require('../internals/to-integer');\r\nvar toLength = require('../internals/to-length');\r\nvar sloppyArrayMethod = require('../internals/sloppy-array-method');\r\n\r\nvar min = Math.min;\r\nvar nativeLastIndexOf = [].lastIndexOf;\r\nvar NEGATIVE_ZERO = !!nativeLastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;\r\nvar SLOPPY_METHOD = sloppyArrayMethod('lastIndexOf');\r\n\r\n// `Array.prototype.lastIndexOf` method implementation\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof\r\nmodule.exports = (NEGATIVE_ZERO || SLOPPY_METHOD) ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {\r\n  // convert -0 to +0\r\n  if (NEGATIVE_ZERO) return nativeLastIndexOf.apply(this, arguments) || 0;\r\n  var O = toIndexedObject(this);\r\n  var length = toLength(O.length);\r\n  var index = length - 1;\r\n  if (arguments.length > 1) index = min(index, toInteger(arguments[1]));\r\n  if (index < 0) index = length + index;\r\n  for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;\r\n  return -1;\r\n} : nativeLastIndexOf;\r\n"]},"metadata":{},"sourceType":"script"}